TP 01 :
- définition de la grammaire

pour compiler:
1) make
2)
- ./tp
- entrée
- Ctrl + D pour redonner la main

===============================================================================

TP 02 :
- ajout des expressions arithmétiques: +, -, *, /
- ajout du code assembleur générer en C
- définition des types synthétiques

===============================================================================

TP 03 :
- $1, $2 représentent les symboles lus
	=> ex: EXPR '+' EXPR : $1 est le 1re EXPR et $3 est le 2nd
	=> '+' est considéré comme $2 mais il n'est pas lu
- ajout des expressions booléennes: TRUE, FALSE, AND et OR
- vérification légére du type des syboles

pour compiler avec asipro et sipro
1) make
2) ./prog > prog.asm
3)
- entré un calcul
- faire entrée
- Ctrl + D pour redonner la main
4) ./aspiro prog.asm exec
5) ./sipro exec

